@model softZoneRestTask.Models.user

@{
    Layout = null;
    TempData.Keep();
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>reserve</title>
    <link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />

    <link rel="stylesheet" type="text/css" href="~/vendor/bootstrap/css/bootstrap.min.css"/>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css"/>
</head>
<body>
    <div class="col-12">
        @using (Html.BeginForm("confirm", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <h4>Reserve Now.</h4>
            <hr />
            @Html.ValidationSummary("", new { @class = "text-danger" })

            <div class="form-group col-5" style="display:inline-block">
                <div class="col-md-10 input-group">
                    @Html.TextBoxFor(m => m.email, new { @class = "form-control", @placeholder = "email" })
                    <div class="input-group-addon">
                        <i class="fa fa-envelope-o"></i>
                    </div>
                </div>
            </div>
            <div class="form-group col-5" style="display:inline-block">
                <div class="col-md-10 input-group">
                    @Html.TextBoxFor(m => m.username, new { @class = "form-control", @placeholder = "name" })
                    <div class="input-group-addon">
                        <i class="fa fa-user"></i>
                    </div>
                </div>

            </div>

            <div class="form-group col-5" style="display:inline-block">
                <div class="col-md-10  input-group">
                    @Html.TextBoxFor(m => m.address, new { @class = "form-control", @placeholder = "address" })
                    <div class="input-group-addon">
                        <i class="fa fa-location-arrow"></i>
                    </div>
                </div>
            </div>
            <div class="form-group col-5" style="display:inline-block">
                <div class="col-md-10  input-group">
                    @Html.TextBoxFor(m => m.phone, new { @class = "form-control", @placeholder = "phone", @maxlength = "12", @onkeydown = "BlockingLetters(event)" })
                    <div class="input-group-addon">
                        <i class="fa fa-phone"></i>
                    </div>
                </div>
            </div>





            <div class="form-group col-5" style="display:inline-block">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-warning" value="confirm" style="margin-left:300px"/>
                </div>
            </div>

            <div class="form-group col-5" style="display:inline-block">
                <div class="col-md-offset-2 col-md-10">
                    @Html.ActionLink("Back", "backToMenu", new { }, new { @class = "btn btn-warning", @type = "button", @style = "margin-left:70px" })


                </div>
            </div>
        }


    </div>
    <script src="~/Scripts/main.js"></script>
    <script src="~/Scripts/jquery-1.12.4.min.js"></script>
    @*<script src="~/Scripts/jquery-1.10.2.min.js"></script>*@
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script>
        function BlockingLetters(eventInstance) {
            eventInstance = eventInstance || window.event;
            key = eventInstance.keyCode || eventInstance.which;
            debugger
            console.log(eventInstance)
            console.log(key)

            if ((key >= 48 && key <= 58) || (key >= 96 && key <= 105)  || key == 8) {
                return true;
            } 
            else {
                if (eventInstance.preventDefault) eventInstance.preventDefault();
                eventInstance.returnValue = false;
                return false;
            } 
        }
    </script>
   
</body>
</html>
